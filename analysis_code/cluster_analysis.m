function [meanSeqDists,mean_net_ev_dist,mean_inter_clust_dists] = cluster_analysis(basedir,divisor)
% Written by Benjamin Ballintyn (2018) email: bbal@brandeis.edu
% This function uses the matrices Xtrain and Xtest to measure the
% intra/inter-cluster distances. Each "cluster" is defined to be the set of
% activity states generated by all sequences with the same number of "left"
% or "right" stimuli
% Inputs:
% 1. basedir: path to folder containing the data for 1 network
% 2. divisor: integer controlling the number of trials of each sequence
%             used in the analysis. For all figures in the paper the value
%             was 1 (meaning only 1 trial used per sequence)
% Outputs:
% 1. meanSeqDists: extraneous output. not used in the paper
% 2. mean_net_ev_dist: vector of length 7 (only used for 2-choice task)
%                      where each element i gives the mean intra-cluster
%                      distance for sequences with i "left" stimuli
% 3. mean_inter_clust_dists: (7 x 7) matrix giving the mean distance
%                            between each pair of clusters
xtr = load([basedir '/x_train_bin.mat']); xtr=xtr.x;
xtst = load([basedir '/x_test_bin.mat']); xtst=xtst.x;
seqs=load([basedir '/seqs.mat']); seqs=seqs.seqs;
p = load([basedir '/params.mat']); p=p.p;
ntrials = p.Ntrials;
largeseqs = repelem(seqs,ntrials,1);
nseqs=size(largeseqs,1);
largeseqsums = sum(largeseqs-1,2);
inds = 1:ntrials/divisor:nseqs;
distances = dist(xtr');
% within sequence distances
for i=1:(nseqs/ntrials)
    curSeqDists = dist(xtr((i-1)*ntrials + 1:i*ntrials,:)');
    meanSeqDists(i) = mean(curSeqDists(~eye(size(curSeqDists))));
end

% within cluster (seqs with same number of left cues) analysis
for i=0:6
    net_ev_inds{i+1} = find(largeseqsums == i);
    inds2analyze = intersect(inds,net_ev_inds{i+1});
    x_subset = xtr(inds2analyze,:)';
    cur_dists = dist(x_subset);
    if (length(inds2analyze) == 1)
        mean_net_ev_dist(i+1) = 0;
    else
        mean_net_ev_dist(i+1) = mean(cur_dists(cur_dists~=0));
    end
end

% across cluster distances
for i=0:6
    for j=0:6
        inds1 = find(largeseqsums == i);
        inds2 = find(largeseqsums == j);
        inds2analyze1 = intersect(inds,inds1);
        inds2analyze2 = intersect(inds,inds2);
        sub_matrix = distances(inds2analyze1,inds2analyze2);
        if (size(sub_matrix) == [1 1])
            mean_inter_clust_dists(i+1,j+1) = sub_matrix;
        else
            inter_dist_vals = sub_matrix(~eye(size(sub_matrix)));
            mean_inter_clust_dists(i+1,j+1) = mean(inter_dist_vals);
        end
    end
end

end

